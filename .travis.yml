dist: bionic
language: minimal
sudo: false
# Default `language: rust` has problems on nightly with rustfmt support

# only cache cargo subcommand binaries and .so libs
# the build artifacts take a lot of space and are slower to
# cache than to actually rebuild anyway...
# We need to cache the whole .cargo directory to keep the
# .crates.toml file.
cache:
  directories:
    - /home/travis/install
    - /home/travis/.cargo

# But don't cache the cargo registry
before_cache:
  - rm -rf "$HOME"/.cargo/registry
before_script:
  - |
    export PATH="$HOME/.cargo/bin:$PATH"
    TRAVIS_RUST_VERSION="${TRAVIS_RUST_VERSION:-nightly}"
    if [ "$TRAVIS_RUST_VERSION" = 'nightly' ]; then
       printf -v RUSTFMT_VERSION '%s%s' '-' "$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/rustfmt)"
       printf -v CLIPPY_VERSION '%s%s' '-' "$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/clippy)"
       SMALLEST_COMPAT_RUST="$([[ "$RUSTFMT_VERSION" < "$CLIPPY_VERSION" ]] && echo "$RUSTFMT_VERSION" || echo "$CLIPPY_VERSION")"

       if command -v rustup 2>/dev/null; then
           rustup default "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
       else
           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
       fi
    fi
    if command -v cargo >/dev/null; then
      export PATH="$HOME/.cargo/bin:$PATH"
      export XDG_RUNTIME_DIR="$PWD"'/socket'
      mkdir "$XDG_RUNTIME_DIR"
      cargo fetch
      rustup component add rustfmt
    fi
    if [ -n "$CLIPPY" ]; then
      rustup component add clippy --toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
    elif [ -n "$BUILD_FMT" ]; then
      rustup component add rustfmt --toolchain "${TRAVIS_RUST_VERSION}${SMALLEST_COMPAT_RUST}"
    fi
script:
  - |
    if [ -n "$BUILD_FMT" ]; then
      cargo fmt --all -- --check
      # rustfmt --check # With: `src/*.rs` xor `"$(find -name '*.rs' -not -path './target/*')"`
    elif [ -n "$CLIPPY" ]; then
      cargo clippy --all -- -D warnings
    elif [ -n "$CARGO_TEST" ]; then
      cargo test --all --features "$FEATURES"
    fi

matrix:
  include:
    - rust: stable
      env: BUILD_FMT=1
    - rust: stable
      env: CLIPPY=1
    - rust: stable
      env: CARGO_TEST=1
    - stage: notify-website
      env:
        secure: 'Tttu2BHQLTvfV2jsTjcAof7tN4CqRSITdBc5+j3wIEUHIZMSplCmAV7PhRFHlVdDP2YmMnuhXE7ADQ7Ahh/qX4tJS2CGD9xaChjDxNMB2oVO7LWR9Sa9D6TtTOtv7JgsdHY6HwRPEJBKbWV29HGhN/9ByYf7eGz1zuDqOSvunLXfW3GCM4Hnzqpnrxpi3ZrrExOK/QxmdI4yR8XOvbsWw/ejdrxfJLJdLyeN9yKuP2XvKYwfZ4cq8A9k9tqSCXAAuV6kdMD97arQO5mZQGlkehBhAOn8JTDnMphZJkqv7QzlNPh0s2HrPmWhMDMg4632Q7cU2mad015HIMNqMeCwdJfbu8ZHaFp4Om645wjleIZKzi8o3fQ0hTcrHXVhgP/e0pfQxzYznYuZXUKL4hOkamJMRWTnWQfuXJ2/0YSSDihrCE67LeVYlLFlblrivMkYrbO2u6Hnj0ezwtcmK3FYG0tValHiLarq42gyq4buLK+9mb9up8ZjmyaSegE85AT3Y4F31BP3ImyalAkWWacamsn0L1Hup019uLrIFQiFTAk8uAc69DkuekQbvyzBR/nYv88Viwv9ps00Vq8G9QKVKARkUlHVbspouoaNEQbMNj/5Dy8xQSbungQOIfXZDFoMPEn2Nfdm1Wx322oyelGw4p/zgpwqfkYasjUqFhm6c9w='
      script:
        - email_author="$(git log -1 --pretty=format:'%an <%ce>')"
        - author="${email_author% *}"; git config --global user.name "$author"
        - email="${email_author#*<}"; email="${email::-1}"; git config --global user.email "$email"
        - git clone https://SamuelMarks:$GH_TOKEN@github.com/Fantom-foundation/fantom-dev-web
          && cd fantom-dev-web
        - echo "  | [$TRAVIS_REPO_SLUG](https://github.com/$TRAVIS_REPO_SLUG) | [$TRAVIS_COMMIT_MESSAGE](https://github.com/$TRAVIS_REPO_SLUG/commit/$TRAVIS_COMMIT) |" >> CHANGESLOG.md
        - git add CHANGESLOG.md
        - git commit -m "[CHANGESLOG.md] $TRAVIS_REPO_SLUG - $TRAVIS_COMMIT_MESSAGE" 
        - git push -u origin master
